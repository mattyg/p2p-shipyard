import{_ as e,c as t,o as a,a1 as o}from"./chunks/framework.rLYnVynv.js";const _=JSON.parse('{"title":"Shipping for desktop platforms","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/desktop/shipping.md","filePath":"documentation/desktop/shipping.md"}'),s={name:"documentation/desktop/shipping.md"},i=o('<h1 id="shipping-for-desktop-platforms" tabindex="-1">Shipping for desktop platforms <a class="header-anchor" href="#shipping-for-desktop-platforms" aria-label="Permalink to &quot;Shipping for desktop platforms&quot;">â€‹</a></h1><p>The best way to create a release build targeting MacOs, Linux and Windows is to use the &quot;release-tauri-happ&quot; github action that was scaffolded with the <code>scaffold-tauri-happ</code> and <code>scaffold-holochain-runtime</code> commands.</p><p>Whenever you are ready to create a release build, simply create a git tag with the format <code>v0.1.0</code>. This will trigger a release workflow for your app, targeting MacOs, Linux and Windows.</p><p>Take a closer look at the workflow file at <code>.github/workflows/release-tauri-app.yaml</code> to understand the step it takes, and edit it to your particular needs if necessary.</p><hr><p>That&#39;s it! You are now ready to ship your tauri app to desktop platforms.</p>',6),r=[i];function p(n,d,c,l,h,f){return a(),t("div",null,r)}const m=e(s,[["render",p]]);export{_ as __pageData,m as default};
